// ‚úÖ Import goiykh t·ª´ module kh√°ch h√†ng
import { goiykh } from './danhsachkhachhang.js';

// ‚úÖ C·ªôt 0: ID chuy·∫øn
export function index0(input) {
  console.log("‚úÖ index0 ƒë∆∞·ª£c g·∫Øn cho:", input);
  input.addEventListener('blur', () => {
    input.value = input.value.trim();
  });
}

// ‚úÖ C·ªôt 1: Ng√†y
export function index1(input) {
  console.log('üîç G·ªçi index1 cho √¥:', input);

  input.addEventListener('blur', () => {
    let val = input.value.trim();
    console.log('üìÖ X·ª≠ l√Ω ng√†y:', val);
    if (!val) return;

    let [day, month, year] = val.split('/');
    if (!month) return;

    const now = new Date();
    year = year || now.getFullYear();
    if (year.length === 2) {
      year = +year >= 50 ? '19' + year : '20' + year;
    }

    input.value = `${day.padStart(2, '0')}/${month.padStart(2, '0')}/${year}`;
  });
}

// ‚úÖ C·ªôt 2: Kh√°ch h√†ng - d√πng h√†m g·ª£i √Ω
export const index2 = goiykh;

// ‚úÖ C·ªôt 3: S·ªë l∆∞·ª£ng
export function index3(input) {
  input.addEventListener('blur', () => {
    const val = input.value.trim();
    if (val && isNaN(val)) {
      alert('‚ö†Ô∏è S·ªë l∆∞·ª£ng ph·∫£i l√† s·ªë!');
      input.focus();
    }
  });
}

// ‚úÖ C·ªôt 4: Ca
export function index4(input) {
  input.addEventListener('blur', () => {
    const ca = input.value.trim().toLowerCase();
    if (ca && !['s√°ng', 'chi·ªÅu', 't·ªëi'].includes(ca)) {
      alert('‚ö†Ô∏è Ca kh√¥ng h·ª£p l·ªá. Nh·∫≠p: s√°ng, chi·ªÅu ho·∫∑c t·ªëi.');
      input.focus();
    }
  });
}

// ‚úÖ C·ªôt 5: T√†i x·∫ø
export function index5(input) {
  input.addEventListener('blur', () => {
    const val = input.value.trim();
    if (!val) {
      alert('‚ö†Ô∏è Vui l√≤ng nh·∫≠p t√™n t√†i x·∫ø.');
      input.focus();
    }
  });
}

// ‚úÖ C·ªôt 6 (ph√≤ng tr√°nh l·ªói n·∫øu c√≥)
function index6(input) {
  console.log('‚ÑπÔ∏è C·ªôt 6 kh√¥ng c√≥ x·ª≠ l√Ω c·ª• th·ªÉ.');
}

// ‚úÖ G·∫Øn s·ª± ki·ªán theo c·ªôt
export function ganSuKienTheoCot() {
  document.querySelectorAll('input[data-col]').forEach(input => {
    const col = +input.dataset.col;
    try {
      if (col === 0) index0(input);
      if (col === 1) index1(input);
      if (col === 2) index2(input);
      if (col === 3) index3(input);
      if (col === 4) index4(input);
      if (col === 5) index5(input);
      if (col === 6) index6(input); // ƒë·ªÅ ph√≤ng c√≥ input c·ªôt 6
    } catch (err) {
      console.warn(`‚ö†Ô∏è L·ªói khi g·∫Øn x·ª≠ l√Ω cho c·ªôt ${col}:`, err);
    }
  });
}
